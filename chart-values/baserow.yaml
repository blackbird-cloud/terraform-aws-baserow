global:
  baserow:
    image:
      tag: 1.35.0
    domain: "${domain_name}"
    backendDomain: "${backend_domain_name}"
    objectsDomain: "${objects_domain_name}"
    serviceAccount:
      shared: true
      create: true
      name: baserow
      annotations:
        "eks.amazonaws.com/role-arn": "${eks_role_arn}"

backendSecrets:
  DATABASE_HOST: "${database_host}"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "baserow"
  DATABASE_USER: "baserow"
  DATABASE_PASSWORD: "${database_password}"
  REDIS_HOST: "${redis_host}"
  REDIS_PORT: "6379"
  REDIS_USER: "default"
  REDIS_PASSWORD: "${redis_password}"
  REDIS_PROTOCOL: "rediss"
  EMAIL_SMTP_PASSWORD: "${email_smtp_password}"

backendConfigMap:
  BASEROW_EXTRA_ALLOWED_HOSTS: "*"
  DONT_UPDATE_FORMULAS_AFTER_MIGRATION: "yes"
  SYNC_TEMPLATES_ON_STARTUP: "false"
  MIGRATE_ON_STARTUP: "false"
  BASEROW_TRIGGER_SYNC_TEMPLATES_AFTER_MIGRATION: "true"
  # File management
  AWS_STORAGE_BUCKET_NAME: "${s3_bucket_name}"
  AWS_S3_CUSTOM_DOMAIN: "${s3_endpoint_url}"
  AWS_S3_REGION_NAME: "${s3_region_name}"
  AWS_DEFAULT_ACL: "private"
  BASEROW_SERVE_FILES_THROUGH_BACKEND: "true"
  BASEROW_SERVE_FILES_THROUGH_BACKEND_PERMISSION: "SIGNED_IN"
  BASEROW_SERVE_FILES_THROUGH_BACKEND_EXPIRE_SECONDS: "300"
  # Email
  EMAIL_SMTP: "true"
  EMAIL_SMTP_USE_TLS: "true"
  EMAIL_SMTP_USER: "${email_smtp_user}"
  EMAIL_SMTP_HOST: ${email_smtp_host}
  EMAIL_SMTP_PORT: "587"
  FROM_EMAIL: ${from_email}
  # Monitoring
  BASEROW_ENABLE_OTEL: "true"
  OTEL_METRIC_EXPORT_INTERVAL: "7200000"
  OTEL_PER_MODULE_SAMPLER_OVERRIDES: "opentelemetry.instrumentation.celery=opentelemetry.instrumentation.django=always_on"
  OTEL_TRACES_SAMPLER: "traceidratio"
  OTEL_TRACES_SAMPLER_ARG:  "0.05"
  SENTRY_DSN: https://900451afbf14c6b0da0d78f3565c7a64@o4510030028537856.ingest.de.sentry.io/4510030030635088
  # Analytics
  POSTHOG_PROJECT_API_KEY: ""
  POSTHOG_HOST: ""
  # Resources
  BASEROW_AMOUNT_OF_GUNICORN_WORKERS: 3
  BASEROW_AMOUNT_OF_WORKERS: 3

frontendConfigMap:
  SENTRY_DSN: https://1d954a62b6bc0606d6de3f3c327b9563@o4510030028537856.ingest.de.sentry.io/4510035302678608

baserow-backend-wsgi:
  tolerations: ${tolerations}
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 50
          preference:
            matchExpressions:
              - key: Instance
                operator: In
                values:
                  - spot
        - weight: 50
          preference:
            matchExpressions:
              - key: Instance
                operator: In
                values:
                  - stable

baserow-backend-asgi:
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

baserow-frontend:
  tolerations: ${tolerations}
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 50
          preference:
            matchExpressions:
              - key: Instance
                operator: In
                values:
                  - spot
        - weight: 50
          preference:
            matchExpressions:
              - key: Instance
                operator: In
                values:
                  - stable

baserow-celery-flower:
  enabled: true
  args:
    - celery-flower
  replicaCount: 1

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/healthcheck-path: "/_health/"
    alb.ingress.kubernetes.io/healthcheck-port: "3000"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/wafv2-acl-arn: "${waf_acl_arn}"

caddy:
  enabled: false

redis:
  enabled: false

postgresql:
  enabled: false

minio:
  enabled: false
