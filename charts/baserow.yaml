global:
  baserow:
    domain: "${domain_name}"
    backendDomain: "${backend_domain_name}"
    objectsDomain: "${objects_domain_name}"
    serviceAccount:
      shared: true
      create: true
      name: baserow
      annotations: {
        "eks.amazonaws.com/role-arn": "${eks_role_arn}"
      }

backendSecrets:
  DATABASE_HOST: "${database_host}"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "baserow"
  DATABASE_USER: "baserow"
  DATABASE_PASSWORD: "${database_password}"
  REDIS_HOST: "${redis_host}"
  REDIS_PORT: "6379"
  REDIS_USER: "default"
  REDIS_PASSWORD: "baserow"

backendConfigMap:
  AWS_STORAGE_BUCKET_NAME: "${s3_bucket_name}"
  AWS_S3_CUSTOM_DOMAIN: "${s3_bucket_name}"
  AWS_S3_REGION_NAME: "${s3_region_name}"
  AWS_S3_ENDPOINT_URL: "${s3_endpoint_url}"
  BASEROW_EXTRA_ALLOWED_HOSTS: "*"

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/target-type: ip

redis:
  enabled: false

postgresql:
  enabled: false

minio:
  enabled: false

caddy:
  enabled: false
